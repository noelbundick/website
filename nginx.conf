user  nginx;
worker_processes  auto;
daemon off;
pid        /var/run/nginx.pid;

# only log critical errors
error_log /var/log/nginx/error.log crit;

events {
  worker_connections  1024;

  # Accept as many connections as possible, after nginx gets notification about a new connection.
  # May flood worker_connections, if that option is set too low.
  multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  # Buffer log writes to speed up IO, or disable them altogether
  access_log /var/log/nginx/access.log  main  buffer=16k;
  #access_log off;

  # Sendfile copies data between one FD and other from within the kernel.
  # More efficient than read() + write(), since the requires transferring data to and from the user space.
  sendfile        on;

  # Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
  # instead of using partial frames. This is useful for prepending headers before calling sendfile,
  # or for throughput optimization.
  tcp_nopush     on;

  # don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
  tcp_nodelay on;

  # Timeout for keep-alive connections. Server will close connections after this time.
  keepalive_timeout  65;

  # Compression. Reduces the amount of data that needs to be transferred over the network
  gzip on;
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
  gzip_disable "MSIE [1-6]\.";

  server {
    listen       80;
    server_name  _;
    root   /usr/share/nginx/html;
    index  index.html;
    
    if ($http_x_arr_ssl = "") {
      return 301 https://$host$request_uri;
    }

    error_page 404 /404.html;
  }
}