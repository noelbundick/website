name: CI
on:
  push:
    branches:
    - master

env:
  resourceGroup: website
  location: westus2
  hugoVersion: '0.53'
  githubUsername: noelbundick
  baseName: noelbundick
  domainName: www.noelbundick.com
  cloudflareEmail: noelbundick@gmail.com

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Checkout submodules
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Pull GitHub gists in as posts
      run: ./pull-gists.sh $githubUsername $githubPAT
      env:
        githubPAT: ${{ secrets.githubPAT }}

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: ${{ env.hugoVersion }}

    - name: Build site using Hugo
      run: |
        cd site
        hugo -v

    - name: Detect deployResources
      run: |
        if git log -1 --pretty=%B | grep -q "^DEPLOY_INFRA"; then
          echo "::set-env name=deployResources::true"
        fi

    - name: Configure Cloudflare DNS
      if: success() && env.deployResources == 'true'
      run: |
        # Staged DNS cutover (add domain & verify, but swap live DNS record later)
        NAKED_DOMAIN=`echo $domainName | rev | cut -d '.' -f -2  | rev`
        ./azure/configure-dns.sh --email $cloudflareEmail --api-key $cloudflareApiKey --hostname awverify.$NAKED_DOMAIN --target awverify.$baseName-proxy.azurewebsites.net --cdn false
        ./azure/configure-dns.sh --email $cloudflareEmail --api-key $cloudflareApiKey --hostname awverify.$domainName --target awverify.$baseName-proxy.azurewebsites.net --cdn false
        # Automate everything, update live DNS now
        #./azure/configure-dns.sh --email $cloudflareEmail --api-key $cloudflareApiKey --hostname $NAKED_DOMAIN --target $baseName-proxy.azurewebsites.net
        #./azure/configure-dns.sh --email $cloudflareEmail --api-key $cloudflareApiKey --hostname $domainName --target $baseName-proxy.azurewebsites.net 

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Azure Resources
      if: success() && env.deployResources == 'true'
      uses: azure/CLI@v1
      with:
        inlineScript: azure/deploy-resources.sh -g $resourceGroup -l $location -n $baseName -d $domainName

    - name: Deploy site content
      uses: azure/CLI@v1
      with:
        inlineScript: az storage blob upload-batch --account-name ${{ env.baseName }} -d '$web' -s ./site/public
