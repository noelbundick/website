<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>windows containers on Noel Bundick</title><link>/tags/windows-containers/</link><description>Recent content in windows containers on Noel Bundick</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 Feb 2018 15:56:10 +0000</lastBuildDate><atom:link href="/tags/windows-containers/index.xml" rel="self" type="application/rss+xml"/><item><title>Running Windows Containers with Volumes on Azure Service Fabric</title><link>/posts/running-windows-containers-with-volumes-on-azure-service-fabric/</link><pubDate>Sat, 10 Feb 2018 15:56:10 +0000</pubDate><guid>/posts/running-windows-containers-with-volumes-on-azure-service-fabric/</guid><description>Containers are rapidly becoming the de-facto choice for application packaging, distribution, and execution in the cloud. This newfound flexibility brings new challenges, particularly with stateful workloads like databases. With the advent of container orchestrators, it&amp;rsquo;s no longer a safe assumption that the underlying data for your server is already directly connected to your host. Nodes fail and are dynamically scaled, but your app still needs its data.
Azure Service Fabric is a distributed systems platform that added support for containers a while back.</description></item></channel></rss>