<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wsl on Noel Bundick</title><link>/tags/wsl/</link><description>Recent content in wsl on Noel Bundick</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/wsl/index.xml" rel="self" type="application/rss+xml"/><item><title>Cross-compiling Kubernetes on Windows Subsystem for Linux</title><link>/posts/cross-compiling-kubernetes-on-windows-subsystem-for-linux/</link><pubDate>Sat, 10 Mar 2018 00:00:00 +0000</pubDate><guid>/posts/cross-compiling-kubernetes-on-windows-subsystem-for-linux/</guid><description>Over the last year, I&amp;rsquo;ve gone from Linux n00b to a growing level of competence. In large part, this is thanks to Windows Subsystem for Linux, where I could learn and take advantage of command line tooling without being completely lost in an unfamiliar ecosystem. It also gave me an easy way to exit vim!
That said, I&amp;rsquo;m always interested to push the limits on things. After Brian Ketelsen&amp;rsquo;s recent post about WSL metadata, and some good conversation on Twitter, I was reminded that I had cross-compiled Kubernetes for Windows under WSL a while back, and had never shared how to repeat this feat of nerdery for others.</description></item><item><title>Bash on Windows + Azure Cloud Shell Quickstart</title><link>/posts/bash-on-windows-azure-cloud-shell-quickstart/</link><pubDate>Sun, 14 May 2017 14:49:56 +0000</pubDate><guid>/posts/bash-on-windows-azure-cloud-shell-quickstart/</guid><description>In a previous post, I shared some info on how to connect to your Azure Cloud Shell shared drive, with a particular focus on Bash on Windows. I thought to myself, &amp;ldquo;How can I make this even easier?&amp;rdquo;
Here&amp;rsquo;s how to get started in just two commands!
TL;DR version - run this ðŸ”—# Run the setup script curl https://gist.githubusercontent.com/noelbundick/f03200a4387b4bf4d3eed2d97169fc89/raw/738c3417a2513847dc71dabb844c395616831de9/setupclouddrive.sh | bash # Run the created mount script ~/.mountclouddrive.sh Long Explanation ðŸ”—Make sure that you&amp;rsquo;ve already gone through the Cloud Shell setup for your selected subscription.</description></item><item><title>Supercharging the Azure Cloud Shell</title><link>/posts/supercharging-the-azure-cloud-shell/</link><pubDate>Sat, 13 May 2017 14:36:02 +0000</pubDate><guid>/posts/supercharging-the-azure-cloud-shell/</guid><description>Azure Cloud Shell, recently announced at Build, is an awesome new way to manage your Azure resources. In a nutshell, it&amp;rsquo;s a hosted terminal session you can access from anywhere using your browser. And it&amp;rsquo;s already got most of the basic tools you&amp;rsquo;ll typically need for interacting with your Azure websites, VMs, Kubernetes clusters, and so on.
As I&amp;rsquo;ve been using it more often, I&amp;rsquo;ve found myself wanting a few files I already had locally - ssh keys, helper scripts, and the like.</description></item><item><title>Getting Started - Bash on Windows</title><link>/posts/getting-started-bash-on-windows/</link><pubDate>Mon, 08 May 2017 18:00:00 +0000</pubDate><guid>/posts/getting-started-bash-on-windows/</guid><description>New job, new blog, new dev box, new&amp;hellip; shell? Why not!
I&amp;rsquo;m spending more and more time with Bash on Windows / Windows Subsystem for Linux lately, and I&amp;rsquo;m loving it! My background to date has been mostly app development &amp;amp; Windows sysadmin, so Bash is new to me. Turns out, it runs great on Windows 10 Creators Update - quirks and all. Having recently set up a new box, I thought I&amp;rsquo;d share some tips and tasks that I would have appreciated when I got started.</description></item></channel></rss>